//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CIS.model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class csisEntities : DbContext
    {
        public csisEntities()
            : base("name=csisEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<course> courses { get; set; }
        public virtual DbSet<courseadvisor> courseadvisors { get; set; }
        public virtual DbSet<courseregistration> courseregistrations { get; set; }
        public virtual DbSet<department> departments { get; set; }
        public virtual DbSet<feespayment> feespayments { get; set; }
        public virtual DbSet<lecturehall> lecturehalls { get; set; }
        public virtual DbSet<lecturer> lecturers { get; set; }
        public virtual DbSet<login> logins { get; set; }
        public virtual DbSet<program> programs { get; set; }
        public virtual DbSet<role> roles { get; set; }
        public virtual DbSet<semester> semesters { get; set; }
        public virtual DbSet<semestercourse> semestercourses { get; set; }
        public virtual DbSet<semesterfee> semesterfees { get; set; }
        public virtual DbSet<student> students { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<finaltran> finaltrans { get; set; }
        public virtual DbSet<gpa> gpas { get; set; }
        public virtual DbSet<reportdata> reportdatas { get; set; }
        public virtual DbSet<reportdemog> reportdemogs { get; set; }
    
        public virtual ObjectResult<transcript_Result> transcript(Nullable<int> id_input, ObjectParameter code, ObjectParameter description, ObjectParameter ssemesterName, ObjectParameter gRADE, ObjectParameter gradepoint)
        {
            var id_inputParameter = id_input.HasValue ?
                new ObjectParameter("id_input", id_input) :
                new ObjectParameter("id_input", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<transcript_Result>("transcript", id_inputParameter, code, description, ssemesterName, gRADE, gradepoint);
        }
    }
}
